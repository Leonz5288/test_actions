name: Publishing Release
on:
  pull_request:
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#release
    types: [opened, synchronized, reopened]
  schedule:
    - cron: "0 0 * * *"

jobs:
  # This job set environment matrix with respect to production release and nightly release.
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          [ -z "${{ github.event.action }}" ] && matrix="[{\"name\":\"taichi-nightly\",\"python\":\"3.8\"}]"
          # For production release, we run on four python versions.
          [ -z "${{ github.event.action }}" ] || matrix="[{\"name\":\"taichi\",\"python\":\"3.6\"},{\"name\":\"taichi\",\"python\":\"3.7\"},{\"name\":\"taichi\",\"python\":\"3.8\"},{\"name\":\"taichi\",\"python\":\"3.9\"}]"
          echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"

  build_and_upload_m1:
    name: Build and Upload (Apple M1)
    needs: matrix_prep
    strategy:
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}
    runs-on: [self-hosted, m1]
    defaults:
      run:
        shell: /bin/bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Build
        run: |
          conda activate $PYTHON
          arch -arm64 python3 -m pip uninstall taichi -y
          export PATH=/Users/github/miniconda/envs/3.9/bin:$PATH
          arch -arm64 python3 -m pip uninstall taichi -y
          git --version
          export CXX=clang++
          arch -arm64 python3 -m pip install -r requirements_dev.txt
          cd python
          git fetch origin master
          export TAICHI_CMAKE_ARGS=$CI_SETUP_CMAKE_ARGS
          arch -arm64 python3 build.py build --project_name $PROJECT_NAME
          cd ..
          export NUM_WHL=`ls dist/*.whl | wc -l`
          if [ $NUM_WHL -ne 1 ]; then echo 'ERROR: created more than 1 whl.' && exit 1; fi
          arch -arm64 python3 -m pip install dist/*.whl
        env:
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=OFF -DTI_WITH_CUDA:BOOL=OFF -DTI_WITH_CC:BOOL=OFF -DTI_WITH_VULKAN:BOOL=OFF -DTI_WITH_TESTS:BOOL=ON
          PROJECT_NAME: ${{ matrix.name }}
          PYTHON: ${{ matrix.python }}

      - name: Upload PyPI
        env:
          PROD_PWD: asdf
          NIGHT_PWD: zxcv
          PROJECT_NAME: ${{ matrix.name }}
        run: |
          cd python
          if [ $PROJECT_NAME == "taichi-nightly" ]; then export PYPI_PWD="$NIGHT_PWD" && python3 build.py upload --skip_build --testpypi --project_name $PROJECT_NAME
          elif [ $PROJECT_NAME == "taichi" ]; then export PYPI_PWD="$PROD_PWD" && python3 build.py upload --skip_build; fi
          conda deactivate
